name: Build with Nuitka

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-nuitka:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: ["3.10"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc g++

    - name: Install system dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # 安装 MSVC 编译器（通过 Chocolatey）
        choco install -y visualstudio2022-workload-vctools
        refreshenv

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install gcc

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka
        # 如果项目有 requirements.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Build with Nuitka
      run: |
        # 单文件模式 + 独立依赖
        python -m nuitka \
          --standalone \
          --onefile \
          --enable-plugin=no-qt \
          --remove-output \
          --output-dir=dist \
          main.py

        # 输出文件大小
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          ls -lah dist\main.exe
          echo "size=$(ls -l dist\main.exe | awk '{print $5}')" >> $GITHUB_OUTPUT
        else
          ls -lah dist/main.bin
          echo "size=$(ls -l dist/main.bin | awk '{print $5}')" >> $GITHUB_OUTPUT
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-nuitka-build
        path: dist/